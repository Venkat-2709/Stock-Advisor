services:
  db:
    container_name: stock_db
    image: postgres:latest
    ports:
      - 5000:5432
    environment:
      POSTGRES_USER: stock_user
      POSTGRES_PASSWORD: stock_pass
      POSTGRES_DB: stock_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stock_user -d stock_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    container_name: stock_redis
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - my-network

  backend:
    container_name: stock_backend
    build:
      context: ./backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - '8000:8000'
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - ./backend/.env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    networks:
      - my-network
    volumes:
      - ./backend:/app

  frontend:
    container_name: stock_frontend
    build:
      context: ./frontend
    ports:
      - "8501:8501"
    depends_on:
      - backend
    env_file:
      - ./frontend/.env
    environment:
      - FASTAPI_URL=${FASTAPI_URL}
    networks:
      - my-network

networks:
  my-network:
    driver: bridge

volumes:
  postgres_data: